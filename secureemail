import tkinter as tk
from tkinter import messagebox
import smtplib
from email.mime.text import MIMEText
from cryptography.fernet import Fernet

def generate_key():
    return Fernet.generate_key()

def encrypt_message(message, key):
    cipher_suite = Fernet(key)
    encrypted_message = cipher_suite.encrypt(message.encode())
    return encrypted_message

def decrypt_message(encrypted_message, key):
    cipher_suite = Fernet(key)
    decrypted_message = cipher_suite.decrypt(encrypted_message).decode()
    return decrypted_message

def send_email():
    # Generate a key for encryption
    key = generate_key()
    
    sender_email = entry_sender.get()
    sender_password = entry_password.get()
    recipient_email = entry_recipient.get()
    subject = entry_subject.get() + " passkey: " + str(key.decode())
    message_body = text_message.get("1.0", "end-1c")

    # Encrypt the message
    encrypted_message = encrypt_message(message_body, key)

    try:
        # Set up the SMTP server for Hotmail/Outlook
        smtp_server = "smtp-mail.outlook.com"
        smtp_port = 587
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()

        # Log in to the email account
        server.login(sender_email, sender_password)

        # Create the email message
        message = MIMEText(str(encrypted_message))
        message["Subject"] = subject
        message["From"] = sender_email
        message["To"] = recipient_email

        # Attach the encryption key to the email
        message.add_header("Encryption-Key", key.decode())

        # Send the email
        server.sendmail(sender_email, recipient_email, message.as_string())

        # Close the connection
        server.quit()

        messagebox.showinfo("Success", "Email sent successfully!")
    except Exception as e:
        messagebox.showerror("Error", f"An error occurred:\n{str(e)}")

def decrypt_message_button():
    encrypted_message = text_received_message.get("1.0", "end-1c")
    key = entry_decryption_key.get()

    try:
        decrypted_message = decrypt_message(encrypted_message.encode(), key)
        text_decrypted_message.delete("1.0", tk.END)
        text_decrypted_message.insert(tk.END, decrypted_message)
    except Exception as e:
        messagebox.showerror("Error", f"An error occurred during decryption:\n{str(e)}")

# Create the main window
window = tk.Tk()
window.title("Secure Email Sender and Receiver")
#window.attributes('-fullscreen', True)  # Set the window to full screen
width = 900
height = 900
window.geometry(f"{width}x{height}")

# Add background color
bg_color = "#cce5ff"  # Light blue background color
window.configure(bg=bg_color)

# Create and place widgets for sending encrypted email
tk.Label(window, text="Sender Email:", font=("Arial", 16), bg=bg_color).grid(row=0, column=0, sticky="e")
tk.Label(window, text="Password:", font=("Arial", 16), bg=bg_color).grid(row=1, column=0, sticky="e")
tk.Label(window, text="Recipient Email:", font=("Arial", 16), bg=bg_color).grid(row=2, column=0, sticky="e")
tk.Label(window, text="Subject:", font=("Arial", 16), bg=bg_color).grid(row=3, column=0, sticky="e")
tk.Label(window, text="Message:", font=("Arial", 16), bg=bg_color).grid(row=4, column=0, sticky="e")

entry_sender = tk.Entry(window, font=("Arial", 14))
entry_sender.grid(row=0, column=1, padx=5, pady=5)
entry_password = tk.Entry(window, show="*", font=("Arial", 14))
entry_password.grid(row=1, column=1, padx=5, pady=5)
entry_recipient = tk.Entry(window, font=("Arial", 14))
entry_recipient.grid(row=2, column=1, padx=5, pady=5)
entry_subject = tk.Entry(window, font=("Arial", 14))
entry_subject.grid(row=3, column=1, padx=5, pady=5)
text_message = tk.Text(window, height=5, width=30, font=("Arial", 14))
text_message.grid(row=4, column=1, padx=5, pady=5)

send_button = tk.Button(window, text="Send Encrypted Email", command=send_email, font=("Arial", 16))
send_button.grid(row=5, column=0, columnspan=2, pady=10)

# Create and place widgets for receiving and decrypting email
tk.Label(window, text="Received Encrypted Message:", font=("Arial", 16), bg=bg_color).grid(row=6, column=0, columnspan=2, pady=10)
text_received_message = tk.Text(window, height=5, width=30, font=("Arial", 14))
text_received_message.grid(row=7, column=0, columnspan=2, padx=5, pady=5)

tk.Label(window, text="Decryption Key:", font=("Arial", 16), bg=bg_color).grid(row=8, column=0, sticky="e")
entry_decryption_key = tk.Entry(window, font=("Arial", 14))
entry_decryption_key.grid(row=8, column=1, padx=5, pady=5)

decrypt_button = tk.Button(window, text="Decrypt Message", command=decrypt_message_button, font=("Arial", 16))
decrypt_button.grid(row=9, column=0, columnspan=2, pady=10)

tk.Label(window, text="Decrypted Message:", font=("Arial", 16), bg=bg_color).grid(row=10, column=0, columnspan=2, pady=10)
text_decrypted_message = tk.Text(window, height=5, width=30, font=("Arial", 14))
text_decrypted_message.grid(row=11, column=0, columnspan=2, padx=5, pady=5)

# Run the Tkinter event loop
window.mainloop()
